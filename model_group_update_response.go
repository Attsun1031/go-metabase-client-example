/*
Metabase

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gometabase

import (
	"encoding/json"
)

// checks if the GroupUpdateResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GroupUpdateResponse{}

// GroupUpdateResponse struct for GroupUpdateResponse
type GroupUpdateResponse struct {
	Id   *int64 `json:"id,omitempty"`
	Name string `json:"name"`
}

// NewGroupUpdateResponse instantiates a new GroupUpdateResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGroupUpdateResponse(name string) *GroupUpdateResponse {
	this := GroupUpdateResponse{}
	this.Name = name
	return &this
}

// NewGroupUpdateResponseWithDefaults instantiates a new GroupUpdateResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGroupUpdateResponseWithDefaults() *GroupUpdateResponse {
	this := GroupUpdateResponse{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *GroupUpdateResponse) GetId() int64 {
	if o == nil || IsNil(o.Id) {
		var ret int64
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GroupUpdateResponse) GetIdOk() (*int64, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *GroupUpdateResponse) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int64 and assigns it to the Id field.
func (o *GroupUpdateResponse) SetId(v int64) {
	o.Id = &v
}

// GetName returns the Name field value
func (o *GroupUpdateResponse) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *GroupUpdateResponse) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *GroupUpdateResponse) SetName(v string) {
	o.Name = v
}

func (o GroupUpdateResponse) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GroupUpdateResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	toSerialize["name"] = o.Name
	return toSerialize, nil
}

type NullableGroupUpdateResponse struct {
	value *GroupUpdateResponse
	isSet bool
}

func (v NullableGroupUpdateResponse) Get() *GroupUpdateResponse {
	return v.value
}

func (v *NullableGroupUpdateResponse) Set(val *GroupUpdateResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableGroupUpdateResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableGroupUpdateResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGroupUpdateResponse(val *GroupUpdateResponse) *NullableGroupUpdateResponse {
	return &NullableGroupUpdateResponse{value: val, isSet: true}
}

func (v NullableGroupUpdateResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGroupUpdateResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
